{"version":3,"sources":["System.js","MemoryCard.js","MemoryCard.Connector.js","MemoryCard.Connector.Object.js","GameSave.js","Game.js","Stick.js","Game.SystemSettings.js","Game.Remote.js","Game.Embedded.js","Game.ControllerConfig.js","Controller.js","Controller.Keyboard.js","Controller.Gamepad.js","Component.js","components/List.js","Button.js","Axis.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClththcjjKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MorgasGS-0.8.3.js","sourcesContent":["(function(µ,SMOD,GMOD,HMOD,SC){\r\n\r\n\tlet gs=µ.gs=µ.gs||{};\r\n\r\n\tSC=SC({\r\n\t\trs:\"rescope\"\r\n\t});\r\n\r\n\tgs.System=µ.Class({\r\n\t\tconstructor:function()\r\n\t\t{\r\n\t\t\tSC.rs.all(this,[\"pauseListener\",\"keyListener\",\"doPoll\"]);\r\n\r\n\t\t\tthis.pauseTimer=null;\r\n\r\n\t\t\tthis.controllers=new Set();\r\n\t\t\tthis.pause=true;\r\n\t\t\tthis.game=null;\r\n\t\t\tthis.memoryCard=null;\r\n\r\n\t\t\tthis.domElement=document.createElement(\"DIV\");\r\n\t\t\tthis.domElement.classList.add(\"System\",\"pause\");\r\n\t\t\tthis.domElement.tabIndex=-1;\r\n\r\n\t\t\tthis.domElement.addEventListener(\"focusin\",this.pauseListener,false);\r\n\t\t\tthis.domElement.addEventListener(\"focusout\",this.pauseListener,false);\r\n\r\n\t\t\tthis.domElement.addEventListener(\"keydown\",this.keyListener,false);\r\n\t\t\tthis.domElement.addEventListener(\"keyup\",this.keyListener,false);\r\n\r\n\t\t\tthis.poll=null;\r\n\r\n\t\t},\r\n\t\tOLD_SAVE_COUNT:3, //0 => keep all saves; should NEVER be negative\r\n\t\tpauseListener(event)\r\n\t\t{\r\n\t\t\tclearTimeout(this.pauseTimer);\r\n\t\t\tlet pause=(event.type===\"focusout\");\r\n\t\t\tthis.pauseTimer=setTimeout(()=>\r\n\t\t\t{\r\n\t\t\t\tif(this.pause===pause) return;\r\n\r\n\t\t\t\tthis.pause=pause;\r\n\t\t\t\tthis.domElement.classList.toggle(\"pause\",this.pause);\r\n\t\t\t\tif(this.game!=null)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.game.setPause(this.pause);\r\n\t\t\t\t}\r\n\t\t\t\tthis.updatePoll(this.pause?null:false);\r\n\t\t\t},50);\r\n\t\t},\r\n\t\tkeyListener(event)\r\n\t\t{\r\n\t\t\tif(HMOD(\"gs.Controller.Keyboard\"))\r\n\t\t\t{\r\n\t\t\t\tlet KeyCon=GMOD(\"gs.Controller.Keyboard\");\r\n\t\t\t\tlet eventConsumed=false;\r\n\t\t\t\tfor(let con of this.controllers)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(con instanceof KeyCon)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teventConsumed|=con.parseEvent(event);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(eventConsumed)\r\n\t\t\t\t{\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdatePoll(force)\r\n\t\t{\r\n\t\t\tlet check=force===true?true:force===false?false:this.shouldPoll();\r\n\t\t\tif (check)\r\n\t\t\t{\r\n\t\t\t\tclearInterval(this.poll);\r\n\t\t\t\tthis.poll=setInterval(this.doPoll,1000);\r\n\t\t\t\t//this.doPoll();\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tclearInterval(this.poll);\r\n\t\t\t\t//cancelAnimationFrame(this.poll);\r\n\t\t\t\tthis.poll=null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshouldPoll()\r\n\t\t{\r\n\t\t\tif(this.poll!==null) return false;\r\n\r\n\t\t\tif(HMOD(\"gs.Controller.Gamepad\"))\r\n\t\t\t{\r\n\t\t\t\tlet Gamepad=GMOD(\"gs.Controller.Gamepad\");\r\n\t\t\t\tfor(let controller of this.controllers)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(controller instanceof Gamepad) return true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tdoPoll()\r\n\t\t{\r\n\t\t\t//TODO hold list of gamepads?\r\n\t\t\tif(HMOD(\"gs.Controller.Gamepad\"))\r\n\t\t\t{\r\n\t\t\t\t//this.poll=requestAnimationFrame(this.doPoll);\r\n\t\t\t\tlet Gamepad=GMOD(\"gs.Controller.Gamepad\");\r\n\t\t\t\tfor(let controller of this.controllers)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(controller instanceof Gamepad) controller.update();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tappendTo(element)\r\n\t\t{\r\n\t\t\telement.appendChild(this.domElement);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\taddControllers(controllers)\r\n\t\t{\r\n\t\t\tfor(let con of controllers) this.addController(con);\r\n\t\t},\r\n\t\taddController(controller)\r\n\t\t{\r\n\t\t\tthis.controllers.add(controller);\r\n\t\t\tcontroller.addEventListener(\"controllerChange\",this,this.propagateControllerChange)\r\n\t\t\tthis.updatePoll();\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tpropagateControllerChange(event)\r\n\t\t{\r\n\t\t\tif(!this.pause&&this.game!=null)\r\n\t\t\t{\r\n\t\t\t\tthis.game.onControllerChange(event);\r\n\t\t\t}\r\n\t\t},\r\n\t\tremoveControllers(controllers)\r\n\t\t{\r\n\t\t\tfor(let con of controllers) this.removeController(con);\r\n\t\t},\r\n\t\tremoveController(controller)\r\n\t\t{\r\n\t\t\tthis.controllers.delete(controller);\r\n\t\t\tcontroller.removeEventListener(\"controllerChange\",this);\r\n\t\t\tthis.updatePoll();\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tsetGame(game)\r\n\t\t{\r\n\t\t\tif(this.game!=null)\r\n\t\t\t{\r\n\t\t\t\tthis.game.system=null;\r\n\t\t\t\tthis.game.setPause(true);\r\n\t\t\t\tthis.domElement.removeChild(this.game.domElement);\r\n\t\t\t}\r\n\t\t\tthis.game=game;\r\n\t\t\tif(this.game!=null)\r\n\t\t\t{\r\n\t\t\t\tif(this.game.system!=null)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.game.system.setGame(null);\r\n\t\t\t\t}\r\n\t\t\t\tthis.game.system=this;\r\n\t\t\t\tthis.game.setPause(this.pause);\r\n\t\t\t\tthis.domElement.appendChild(this.game.domElement);\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync save(oldSave)\r\n\t\t{\r\n\t\t\tif(this.memoryCard==null) throw new ReferenceError(\"#Game:001 no memory card\");\r\n\r\n\t\t\tlet param={state:this.program.state};\r\n\t\t\tif(oldSave!=null)\r\n\t\t\t{\r\n\t\t\t\tparam.oldSaves=[oldSave,...(oldSave.oldSaves.slice(0,this.OLD_SAVE_COUNT-1))];\r\n\t\t\t}\r\n\t\t\treturn this.memoryCard.save(this.program.name,new SC.GameSave(param));\r\n\t\t}\r\n\t});\r\n\r\n\tSMOD(\"gs.System\",gs.System);\r\n\r\n})(Morgas,Morgas.setModule,Morgas.getModule,Morgas.hasModule,Morgas.shortcut);","(function(µ,SMOD,GMOD,HMOD,SC){\r\n\r\n\tlet gs=µ.gs=µ.gs||{};\r\n\r\n\t//SC=SC({});\r\n\r\n\tgs.MemoryCard=µ.Class({\r\n\t\t[µ.Class.symbols.abstract]:true,\r\n\t\t[µ.Class.symbols.onExtend]:function(sub)\r\n\t\t{\r\n\t\t\tif(typeof sub.prototype.save!=\"function\") throw new SyntaxError(\"#MemoryCard:001 no save function defined\");\r\n\t\t\tif(typeof sub.prototype.getAll!=\"function\") throw new SyntaxError(\"#MemoryCard:001 no getAll function defined\");\r\n\t\t},\r\n\t\t//async save(gameName,gameSave){},\r\n\t\t//async getAll(gameName){}\r\n\t});\r\n\r\n\tSMOD(\"gs.MemoryCard\",gs.MemoryCard);\r\n\r\n})(Morgas,Morgas.setModule,Morgas.getModule,Morgas.hasModule,Morgas.shortcut);","(function(µ,SMOD,GMOD,HMOD,SC){\r\n\r\n\tlet MemoryCard=GMOD(\"gs.MemoryCard\");\r\n\r\n\tSC=SC({\r\n\t\tObjectConnector:\"ObjectConnector\",\r\n\t\tGameSave:\"gs.GameSave\"\r\n\t});\r\n\r\n\tMemoryCard.Connector=µ.Class(MemoryCard,{\r\n\t\t[µ.Class.symbols.abstract]:true,\r\n\t\t[µ.Class.symbols.onExtend]:function(sub)\r\n\t\t{\r\n\t\t\tif(typeof sub.prototype.getConnector!=\"function\") throw new SyntaxError(\"#MemoryCard.Connector:001 no getConnector function defined\");\r\n\t\t},\r\n\t\t//getConnector(name){},\r\n\t\tsave(gameName,gameSave)\r\n\t\t{\r\n\t\t\tlet connector=this.getConnector(gameName);\r\n\t\t\treturn connector.save(gameSave);\r\n\t\t},\r\n\t\tgetAll(gameName)\r\n\t\t{\r\n\t\t\tlet connector=this.getConnector(gameName);\r\n\t\t\treturn connector.load(SC.GameSave);\r\n\t\t}\r\n\t});\r\n\r\n\tSMOD(\"gs.MemCon\",MemoryCard.Connector);\r\n\r\n})(Morgas,Morgas.setModule,Morgas.getModule,Morgas.hasModule,Morgas.shortcut);","(function(µ,SMOD,GMOD,HMOD,SC){\r\n\r\n\tlet MemCon=GMOD(\"gs.MemCon\");\r\n\r\n\tSC=SC({\r\n\t\tObjectConnector:\"ObjectConnector\"\r\n\t});\r\n\r\n\tMemCon.Object=µ.Class(MemCon,{\r\n\t\tconstructor:function(global=false)\r\n\t\t{\r\n\t\t\tthis.connectors=new Map();\r\n\t\t\tthis.global=global;\r\n\t\t},\r\n\t\tgetConnector(name)\r\n\t\t{\r\n\t\t\tif(!this.connectors.has(name))\r\n\t\t\t{\r\n\t\t\t\tthis.connectors.set(name,new SC.ObjectConnector(this.global));\r\n\t\t\t}\r\n\t\t\treturn this.connectors.get(name);\r\n\t\t}\r\n\t});\r\n\r\n\tSMOD(\"gs.MemCon.Object\",MemCon.Object);\r\n\r\n})(Morgas,Morgas.setModule,Morgas.getModule,Morgas.hasModule,Morgas.shortcut);","(function(µ,SMOD,GMOD,HMOD,SC){\r\n\r\n\tlet gs=µ.gs=µ.gs||{};\r\n\r\n\tlet DBObj=GMOD(\"DBObj\");\r\n\r\n\t//SC=SC({});\r\n\r\n\tgs.GameSave=µ.Class(DBObj,{\r\n\t\tobjectType:\"GameSave\",\r\n\t\tconstructor:function(param={})\r\n\t\t{\r\n\t\t\tthis.mega(param);\r\n\r\n\t\t\tlet {\r\n\t\t\t\tdate=new Date(),\r\n\t\t\t\toldSaves=[],\r\n\t\t\t\tstate=null\r\n\t\t\t}=param;\r\n\r\n\t\t\tif(oldSaves.length>gs.GameSave.OLD_SAVE_COUNT)\r\n\t\t\t{\r\n\t\t\t\toldSaves.length=gs.GameSave.OLD_SAVE_COUNT;\r\n\t\t\t}\r\n\r\n\t\t\tthis.addField(\"date\",\t\tFIELD.TYPES.DATE\t,date );\r\n\t\t\tthis.addField(\"state\",\t\tFIELD.TYPES.JSON\t,state);\r\n\t\t\tthis.addField(\"oldSaves\",\tFIELD.TYPES.JSON\t,oldSaves);\r\n\t\t}\r\n\t});\r\n\tgs.GameSave.OLD_SAVE_COUNT=3;\r\n\r\n\tSMOD(\"gs.GameSave\",gs.GameSave);\r\n\r\n})(Morgas,Morgas.setModule,Morgas.getModule,Morgas.hasModule,Morgas.shortcut);","(function(µ,SMOD,GMOD,HMOD,SC){\r\n\r\n\tlet gs=µ.gs=µ.gs||{};\r\n\r\n\t//SC=SC({});\r\n\r\n\tlet gameNames=new Map();\r\n\r\n\tgs.Game=µ.Class({\r\n\t\t[µ.Class.symbols.abstract]:true,\r\n\t\t[µ.Class.symbols.onExtend]:function(sub)\r\n\t\t{\r\n\t\t\tlet sProt=sub.prototype;\r\n\t\t\tif(!sProt.hasOwnProperty(\"name\")||!sProt.name) throw new SyntaxError(\"#Game:001 Game has no name\");\r\n\t\t\tif(gameNames.has(sProt.name)) throw new RangeError(\"#Game:002 Game name must be unique\");\r\n\t\t\tgameNames.set(sProt.name,sub);\r\n\t\t},\r\n\t\tconstructor:function({elementTag=\"DIV\",domElement=document.createElement(elementTag)}={})\r\n\t\t{\r\n\t\t\tthis.state=null;\r\n\t\t\tthis.system=null; // set from System.setProgramm()\r\n\t\t\tthis.domElement=domElement;\r\n\t\t\tthis.domElement.classList.add(\"Game\");\r\n\t\t\tthis.domElement.classList.add(this.name);\r\n\r\n\t\t\tthis.pause=true;\r\n\t\t},\r\n\t\tsetPause(value)\r\n\t\t{\r\n\t\t\tthis.pause=!!value;\r\n\t\t},\r\n\t\tonControllerChange(event){},\r\n\t\tasync save(oldSave=null)\r\n\t\t{\r\n\t\t\tif(this.system!=null)\r\n\t\t\t{\r\n\t\t\t\treturn this.system.save(oldSave);\r\n\t\t\t}\r\n\t\t\tthrow new ReferenceError(\"#Game:003 System is null\");\r\n\t\t},\r\n\t\tasync getSaves()\r\n\t\t{\r\n\t\t\tif(this.system!=null)\r\n\t\t\t{\r\n\t\t\t\treturn this.system.getSaves(this.name);\r\n\t\t\t}\r\n\t\t\treturn [];\r\n\t\t},\r\n\t\tdestroy()\r\n\t\t{\r\n\t\t\tthis.domElement.remove();\r\n\t\t\tthis.mega();\r\n\t\t}\r\n\t});\r\n\r\n\tgs.Game.getGameByName=function(name)\r\n\t{\r\n\t\treturn gameNames.get(name);\r\n\t};\r\n\r\n\tSMOD(\"gs.Game\",gs.Game);\r\n\r\n})(Morgas,Morgas.setModule,Morgas.getModule,Morgas.hasModule,Morgas.shortcut);","(function(µ,SMOD,GMOD,HMOD,SC){\r\n\r\n    let gs=µ.gs=µ.gs||{};\r\n\r\n\tSC=SC({\r\n\t\tAxis:\"gs.Axis\"\r\n\t});\r\n\r\n\tgs.Stick=µ.Class({\r\n\t\tconstructor:function(xAxis=new SC.Axis(),yAxis=new SC.Axis())\r\n\t\t{\r\n\t\t\tthis.xAxis=xAxis;\r\n\t\t\tthis.yAxis=yAxis;\r\n\t\t},\r\n\t\tsetXAxis(axis)\r\n\t\t{\r\n\t\t\tthis.xAxis=axis;\r\n\t\t},\r\n\t\tsetYAxis(axis)\r\n\t\t{\r\n\t\t\tthis.yAxis=axis;\r\n\t\t},\r\n\t\tsetValue(valueX,valueY)\r\n\t\t{\r\n\t\t\tlet rtn=this.xAxis.setValue(valueX);\r\n\t\t\trtn|=this.yAxis.setValue(valueY);\r\n\t\t\treturn rtn;\r\n\t\t},\r\n\t\tgetState()\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tx:this.xAxis.value,\r\n\t\t\t\ty:this.yAxis.value\r\n\t\t\t};\r\n\t\t},\r\n\t\ttoJSON()\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\txAxis:this.xAxis,\r\n\t\t\t\tyAxis:this.yAxis\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n\tgs.Stick.fromJSON=function(json)\r\n\t{\r\n\t\treturn new gs.Stick({\r\n\t\t\txAxis:new SC.Acis(json.xAxis),\r\n\t\t\tyAxis:new SC.Acis(json.yAxis)\r\n\t\t});\r\n\t};\r\n\r\n\tSMOD(\"gs.Stick\",gs.Stick);\r\n\r\n})(Morgas,Morgas.setModule,Morgas.getModule,Morgas.hasModule,Morgas.shortcut);","(function(µ,SMOD,GMOD,HMOD,SC){\r\n\r\n\tlet Game=GMOD(\"gs.Game\");\r\n\r\n\tSC=SC({\r\n\t\trescope:\"rescope\",\r\n\t\tControllerConfig:\"gs.Game.ControllerConfig\"\r\n\t});\r\n\r\n\tGame.SystemSettings=µ.Class(Game,{\r\n\t\tname:\"SystemSettings\",\r\n\t\tconstructor:function(onExit)\r\n\t\t{\r\n\t\t\tSC.rescope.all(this,[\"onAction\"]);\r\n\t\t\tthis.mega();\r\n\t\t\tthis.onExit=onExit;\r\n\t\t\tthis.actionsContainer=document.createElement(\"DIV\");\r\n\t\t\tthis.actionsContainer.classList.add(\"actions\");\r\n\t\t\tthis.actionsContainer.innerHTML=`\r\n\t\t\t\t<button data-action=\"controllerConfig\">Controller Config</button>\r\n\t\t\t\t<button data-action=\"exit\">Exit</button>\r\n\t\t\t`;\r\n\t\t\tthis.actionsContainer.addEventListener(\"click\",this.onAction);\r\n\t\t\tthis.domElement.appendChild(this.actionsContainer);\r\n\t\t},\r\n\t\tonAction(event)\r\n\t\t{\r\n\t\t\tlet system=this.system;\r\n\t\t\tswitch(event.target.dataset.action)\r\n\t\t\t{\r\n\t\t\t\tcase \"controllerConfig\":\r\n\t\t\t\t\tsystem.setGame(new SC.ControllerConfig({\r\n\t\t\t\t\t\tonExit:()=>system.setGame(this)\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"exit\":\r\n\t\t\t\t\tif(this.onExit) this.onExit();\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tSMOD(\"gs.Game.SystemSettings\",Game.SystemSettings);\r\n\r\n})(Morgas,Morgas.setModule,Morgas.getModule,Morgas.hasModule,Morgas.shortcut);","(function(µ,SMOD,GMOD,HMOD,SC){\r\n\r\n\tlet Game=GMOD(\"gs.Game\");\r\n\r\n\tSC=SC({\r\n\t\trs:\"rescope\"\r\n\t});\r\n\r\n\t/**\r\n\t * Game Class to execute an gs.Game.Embedded using an iframe\r\n\t */\r\n\tGame.Remote=µ.Class(Game,{\r\n\t\t[µ.Class.symbols.abstract]:function(name,url)\r\n\t\t{\r\n\t\t\treturn {name:name,url:new URL(url,location.href)};\r\n\t\t},\r\n\t\t[µ.Class.symbols.onExtend]:function(sub)\r\n\t\t{\r\n\t\t\tGame.prototype[µ.Class.symbols.onExtend](sub);\r\n\t\t\tlet sProt=sub.prototype;\r\n\t\t\tif(!sProt.url) throw new SyntaxError(\"#Game.Remote:001 Game has no url\");\r\n\t\t\tif(!(sProt.url instanceof URL)) throw new SyntaxError(\"#Game.Remote:002 Game url is not an instance of URL\");\r\n\t\t},\r\n\t\tconstructor:function()\r\n\t\t{\r\n\t\t\tSC.rs.all(this,[\"_onLoad\",\"_onMessage\",\"_sendPause\"]);\r\n\t\t\tthis.mega({elementTag:\"IFRAME\"});\r\n\t\t\tthis.domElement.classList.add(\"Remote\")\r\n\t\t\tthis.domElement.sandbox=\"allow-orientation-lock allow-pointer-lock allow-scripts allow-same-origin\";\r\n\t\t\tthis.domElement.src=this.url;\r\n\t\t\tthis.domElement.addEventListener(\"load\",this._onLoad,false);\r\n\t\t\twindow.addEventListener(\"message\",this._onMessage,false);\r\n\r\n\t\t\tlet pauseTimer=null;\r\n\t\t},\r\n\t\t_onLoad()\r\n\t\t{\r\n\t\t\tthis.setPause(this.pause);\r\n\t\t},\r\n\t\t_onMessage(event)\r\n\t\t{\r\n\t\t\tif(event.origin===this.url.origin)\r\n\t\t\t{\r\n\t\t\t\tlet message=event.data;\r\n\t\t\t\tlet promise=null;\r\n\t\t\t\tswitch(message.type)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"save\":\r\n\t\t\t\t\t\tthis.state=message.state;\r\n\t\t\t\t\t\tpromise=this.save(message.oldSave)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"getSaves\":\r\n\t\t\t\t\t\tpromise=this.getSaves(message.oldSave);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"reclaimFocus\":\r\n\t\t\t\t\t\tthis.reclaimFocus();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif(promise)\r\n\t\t\t\t{\r\n\t\t\t\t\tpromise.then(data=>({data:data}),error=>({error:error}))\r\n\t\t\t\t\t.then(answer=>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tanswer.request=message.request;\r\n\t\t\t\t\t\tthis._send(answer);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t_send(message)\r\n\t\t{\r\n\t\t\tif(this.domElement.contentWindow)\r\n\t\t\t{\r\n\t\t\t\tthis.domElement.contentWindow.postMessage(message,this.url.origin);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetPause(value)\r\n\t\t{\r\n\t\t\tthis.mega(value);\r\n\t\t\tclearTimeout(this.pauseTimer);\r\n\t\t\tthis.pauseTimer=setTimeout(this._sendPause,15)\r\n\t\t},\r\n\t\t_sendPause()\r\n\t\t{\r\n\t\t\tthis._send({\r\n\t\t\t\ttype:\"pause\",\r\n\t\t\t\tvalue:this.pause\r\n\t\t\t});\r\n\t\t},\r\n\t\tonControllerChange(event)\r\n\t\t{\r\n\t\t\tthis._send({\r\n\t\t\t\ttype:\"controllerEvent\",\r\n\t\t\t\tevent:event\r\n\t\t\t});\r\n\t\t},\r\n\t\treclaimFocus()\r\n\t\t{\r\n\t\t\tif(this.system!=null)\r\n\t\t\t{\r\n\t\t\t\tthis.system.domElement.focus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tdestroy()\r\n\t\t{\r\n\t\t\twindow.removeEventListener(\"message\",this._onMessage,false);\r\n\t\t\tthis.mega();\r\n\t\t}\r\n\t});\r\n\r\n\tSMOD(\"gs.Game.Remote\",Game.Remote);\r\n\r\n})(Morgas,Morgas.setModule,Morgas.getModule,Morgas.hasModule,Morgas.shortcut);","(function(µ,SMOD,GMOD,HMOD,SC){\r\n\r\n\tlet Game=GMOD(\"gs.Game\");\r\n\r\n\tSC=SC({\r\n\t\trs:\"rescope\",\r\n\t\tPromise:\"Promise\"\r\n\t});\r\n\r\n\tlet REQUEST_COUNTER=0;\r\n\r\n\tGame.Embedded=µ.Class(Game,{\r\n\t\t[µ.Class.symbols.abstract]:true,\r\n\t\tconstructor:function(param={})\r\n\t\t{\r\n\t\t\tSC.rs.all(this,[\"_onMessage\",\"_onFocus\"]);\r\n\r\n\t\t\tparam.domElement=document.body;\r\n\r\n\t\t\tthis.mega(param);\r\n\t\t\tthis.domElement.classList.add(\"Embedded\");\r\n\r\n\t\t\t({\r\n\t\t\t\ttimeout:this.timeout=50000\r\n\t\t\t}=param);\r\n\r\n\t\t\tthis.requestMap=new Map();\r\n\t\t\twindow.addEventListener(\"message\",this._onMessage);\r\n\t\t\twindow.addEventListener(\"focus\",this._onFocus);\r\n\t\t},\r\n\t\t_send(message)\r\n\t\t{\r\n\t\t\twindow.parent.postMessage(message,window.parent.origin);\r\n\t\t},\r\n\t\t_request(message)\r\n\t\t{\r\n\t\t\tmessage.request=REQUEST_COUNTER++;\r\n\r\n\t\t\tlet timer;\r\n\t\t\tlet promise=new SC.Promise(()=>\r\n\t\t\t{\r\n\t\t\t\tthis.requestMap.set(message.request,signal);\r\n\t\t\t\ttimer=setTimeout(()=>\r\n\t\t\t\t{\r\n\t\t\t\t\tsignal.reject(\"timeout\");\r\n\t\t\t\t},this.timeout);\r\n\t\t\t},{scope:this});\r\n\t\t\tpromise.always(()=>\r\n\t\t\t{\r\n\t\t\t\tthis.requestMap.delete(message.request);\r\n\t\t\t\tclearTimeout(timer);\r\n\t\t\t});\r\n\t\t},\r\n\t\t_onMessage(event)\r\n\t\t{\r\n\t\t\tlet message=event.data;\r\n\t\t\tif(\"request\" in message)\r\n\t\t\t{\r\n\t\t\t\tif(!this.requestMap.has(message.request))\r\n\t\t\t\t{\r\n\t\t\t\t\tµ.logger.error(\"#Game.Embedded:001 no such request \"+message.request);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tlet signal=this.requestMap.get(event.data.request);\r\n\r\n\t\t\t\t\tif(message.error) signal.reject(error);\r\n\t\t\t\t\telse signal.resolve(message.data);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tswitch(message.type)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"pause\":\r\n\t\t\t\t\t\tthis.setPause(message.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"controllerEvent\":\r\n\t\t\t\t\t\tthis.onControllerChange(message.event);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsave(oldSave)\r\n\t\t{\r\n\t\t\treturn this._request({type:\"save\",oldSave:oldSave,state:this.state});\r\n\t\t},\r\n\t\tgetSaves()\r\n\t\t{\r\n\t\t\treturn this._request({type:\"getSaves\"});\r\n\t\t},\r\n\t\t_onFocus()\r\n\t\t{\r\n\t\t\tif(document.activeElement===document.body)\r\n\t\t\t{\r\n\t\t\t\tthis._send({type:\"reclaimFocus\"});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tSMOD(\"gs.Game.Embedded\",Game.Embedded);\r\n\r\n})(Morgas,Morgas.setModule,Morgas.getModule,Morgas.hasModule,Morgas.shortcut);","(function(µ,SMOD,GMOD,HMOD,SC){\r\n\r\n\tlet Game=GMOD(\"gs.Game\");\r\n\r\n\tSC=SC({\r\n\t\trescope:\"rescope\",\r\n\t\tKeyboard:\"gs.Controller.Keyboard\",\r\n\t\tGamepad:\"gs.Controller.Gamepad\",\r\n\t});\r\n\r\n\tGame.ControllerConfig=µ.Class(Game,{\r\n\t\tname:\"ControllerConfig\",\r\n\t\tconstructor:function({\r\n\t\t\tonExit=null,\r\n\t\t\tbuttons=6,\r\n\t\t\tsticks=1,\r\n\t\t\taxes=0\r\n\t\t}={})\r\n    \t{\r\n\t\t\tSC.rescope.all(this,[\"onAction\"]);\r\n    \t\tthis.mega();\r\n\r\n    \t\tthis.onExit=onExit;\r\n\r\n    \t\tthis.templateCounts={\r\n\t\t\t\tbuttons:buttons,\r\n\t\t\t\tsticks:sticks,\r\n\t\t\t\taxes:axes\r\n\t\t\t};\r\n\r\n\t\t\tthis.main=document.createElement(\"DIV\");\r\n\t\t\tthis.main.classList.add(\"main\");\r\n\t\t\tthis.domElement.appendChild(this.main);\r\n\r\n    \t\tthis.menu=document.createElement(\"DIV\");\r\n    \t\tthis.menu.classList.add(\"menu\");\r\n    \t\tthis.menu.innerHTML=`\r\n    \t\t\t<div class=\"addController\" tabindex=\"-1\">\r\n    \t\t\t\t<span title=\"add\">➕</span>\r\n    \t\t\t\t<div>\r\n    \t\t\t\t\t<div data-action=\"addGamepad\" title=\"Gamepad\">🎮</div>\r\n    \t\t\t\t\t<div data-action=\"addKeyboard\" title=\"Keyboard\">⌨</div>\r\n    \t\t\t\t</div>\r\n    \t\t\t</div>\r\n    \t\t\t<div data-action=\"mapping\" title=\"Mapping\">⚙</div>\r\n    \t\t\t<div data-action=\"setting\" title=\"Setting\">🔧</div>\r\n    \t\t\t<div data-action=\"remove\" title=\"Remove\">➖</div>\r\n    \t\t\t<div data-action=\"exit\" title=\"Exit\">🚪</div>\r\n    \t\t`;\r\n    \t\tthis.menu.addEventListener(\"click\",this.onAction);\r\n    \t\tthis.main.appendChild(this.menu);\r\n\r\n    \t\tthis.controllerIcons=new Map([\r\n\t\t\t\t[SC.Keyboard.prototype.constructor,\"⌨\"],\r\n\t\t\t\t[SC.Gamepad.prototype.constructor,\"🎮\"],\r\n\t\t\t]);\r\n\r\n    \t\tthis.list=document.createElement(\"DIV\");\r\n    \t\tthis.list.classList.add(\"list\");\r\n    \t\tthis.main.appendChild(this.list);\r\n    \t\tthis.controllerMap=new Map();\r\n    \t},\r\n    \tsetPause(value)\r\n    \t{\r\n    \t\tthis.mega(value);\r\n    \t\tif(!this.pause) this.updateSystem();\r\n    \t},\r\n    \tupdateSystem()\r\n    \t{\r\n    \t\tthis.controllerMap.clear();\r\n    \t\twhile(this.list.lastChild) this.list.lastChild.remove();\r\n\r\n    \t\tlet counter=0;\r\n    \t\tfor(let controller of this.system.controllers)\r\n    \t\t{\r\n    \t\t\tlet element=document.createElement(\"LABEL\");\r\n    \t\t\telement.innerHTML=`\r\n    \t\t\t\t<input type=\"radio\" name=\"ControllerConfig-list\">\r\n    \t\t\t\t<div>${this.controllerIcons.get(controller.constructor)||\"⁈\"}</div>\r\n    \t\t\t\t<div>test ${++counter}\r\n    \t\t\t`;\r\n    \t\t\tthis.controllerMap.set(element,controller);\r\n    \t\t\tthis.controllerMap.set(controller,element);\r\n    \t\t\tthis.list.appendChild(element);\r\n    \t\t}\r\n    \t},\r\n    \tonAction(event)\r\n\t\t{\r\n\t\t\tlet selected;\r\n\t\t\tlet controller;\r\n\t\t\tswitch(event.target.dataset.action)\r\n\t\t\t{\r\n\t\t\t\tcase \"addGamepad\":\r\n\t\t\t\t\tthis.selectGamepad()\r\n\t\t\t\t\t.then(newGameCon=>{\r\n\t\t\t\t\t\tthis.system.addController(newGameCon);\r\n\t\t\t\t\t\tthis.editGamepad(newGameCon);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"addKeyboard\":\r\n\t\t\t\t\tlet newKeyCon=new SC.Keyboard();\r\n\t\t\t\t\tthis.system.addController(newKeyCon);\r\n\t\t\t\t\tcontrollerConfig.editKeyboard(newKeyCon);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"mapping\":\r\n\t\t\t\t\tselected=this.list.querySelector(\":checked\").parentNode;\r\n\t\t\t\t\tcontroller=this.controllerMap.get(selected);\r\n\t\t\t\t\tif(!controller) return ;\r\n\r\n\t\t\t\t\tswitch(controller.constructor)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcase SC.Keyboard.prototype.constructor:\r\n\t\t\t\t\t\t\tthis.mapKeyboard(controller);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase SC.Gamepad.prototype.constructor:\r\n\t\t\t\t\t\t\tthis.mapGamepad(controller);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tµ.logger.error(\"#ControllerConfig:001 unknown controller class\")\r\n\t\t\t\t\t\t\t//TODO\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"setting\":\r\n\t\t\t\t\tselected=this.list.querySelector(\":checked\").parentNode;\r\n\t\t\t\t\tcontroller=this.controllerMap.get(selected);\r\n\t\t\t\t\tif(!controller) return ;\r\n\r\n\t\t\t\t\tthis.setting(controller);\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"remove\":\r\n\t\t\t\t\tselected=this.list.querySelector(\":checked\").parentNode;\r\n\t\t\t\t\tcontroller=this.controllerMap.get(selected);\r\n\t\t\t\t\tthis.system.removeController(controller);\r\n\t\t\t\t\tthis.updateSystem();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"exit\":\r\n\t\t\t\t\tif(this.onExit) this.onExit();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectGamepad()\r\n\t\t{\r\n\t\t\treturn new Promise((resolve,reject)=>\r\n\t\t\t{\r\n\t\t\t\tlet chooseContainer=document.createElement(\"DIV\");\r\n\t\t\t\tchooseContainer.classList.add(\"selectGamepad\");\r\n\r\n\t\t\t\tlet gamepads;\r\n\t\t\t\tlet updateChoice=()=>\r\n\t\t\t\t{\r\n\t\t\t\t\tgamepads=navigator.getGamepads();\r\n\t\t\t\t\tfor(let controller of this.system.controllers)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(controller instanceof SC.Gamepad)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tgamepads[controller.gamepad.index]=null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgamepads=gamepads.filter(µ.constantFunctions.pass);\r\n\t\t\t\t\tchooseContainer.innerHTML=`\r\n\t\t\t\t\t\t<select>\r\n\t\t\t\t\t\t\t<option value=\"\"/>\r\n\t\t\t\t\t\t\t${gamepads.map(g=>\r\n\t\t\t\t\t\t\t`<option value=\"${g.index}\">${g.id}</option>`)\r\n\t\t\t\t\t\t\t.join(\"\\n\")}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<div class=\"gamepad-hint\">press any button to activate gamepad</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<button data-action=\"ok\">OK</button>\r\n\t\t\t\t\t\t\t<button data-action=\"cancel\">Cancel</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t`;\r\n\t\t\t\t\tchooseContainer.children[0].focus();\r\n\t\t\t\t};\r\n\t\t\t\twindow.addEventListener(\"gamepadconnected\",updateChoice);\r\n\t\t\t\tthis.domElement.appendChild(chooseContainer);\r\n\t\t\t\tthis.domElement.classList.add(\"block\");\r\n\t\t\t\tupdateChoice();\r\n\r\n\t\t\t\tchooseContainer.addEventListener(\"click\",(event)=>\r\n\t\t\t\t{\r\n\t\t\t\t\tswitch(event.target.dataset.action)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcase \"cancel\":\r\n\t\t\t\t\t\t\twindow.removeEventListener(\"gamepadconnected\",updateChoice);\r\n\t\t\t\t\t\t\tthis.domElement.classList.remove(\"block\");\r\n\t\t\t\t\t\t\tchooseContainer.remove();\r\n\t\t\t\t\t\t\treject();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"ok\":\r\n\t\t\t\t\t\t\tlet select=chooseContainer.children[0];\r\n\t\t\t\t\t\t\tlet gamepad=gamepads[select.value]\r\n\t\t\t\t\t\t\tif(gamepad)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\twindow.removeEventListener(\"gamepadconnected\",updateChoice);\r\n\t\t\t\t\t\t\t\tthis.domElement.classList.remove(\"block\");\r\n\t\t\t\t\t\t\t\tchooseContainer.remove();\r\n\t\t\t\t\t\t\t\tresolve(new SC.Gamepad(gamepad));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\t\tgetMappingTemplate()\r\n\t\t{\r\n\t\t\tlet template={\r\n\t\t\t\tdomElement:document.createElement(\"DIV\"),\r\n\t\t\t\tbuttons:{\r\n\t\t\t\t\tdomElement:document.createElement(\"FIELDSET\"),\r\n\t\t\t\t},\r\n\t\t\t\tsticks:{\r\n\t\t\t\t\tdomElement:document.createElement(\"FIELDSET\"),\r\n\t\t\t\t},\r\n\t\t\t\taxes:{\r\n\t\t\t\t\tdomElement:document.createElement(\"FIELDSET\"),\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\ttemplate.domElement.classList.add(\"edit\");\r\n\t\t\ttemplate.domElement.appendChild(template.buttons.domElement);\r\n\r\n\t\t\ttemplate.buttons.domElement.classList.add(\"buttons\");\r\n\t\t\tlet legend=document.createElement(\"LEGEND\");\r\n\t\t\tlegend.textContent=\"Buttons\";\r\n\t\t\ttemplate.buttons.domElement.appendChild(legend);\r\n\t\t\tif(this.templateCounts.buttons==0)\r\n\t\t\t{\r\n\t\t\t\ttemplate.buttons.domElement.classList.add(\"empty\");\r\n\t\t\t}\r\n\t\t\telse for(let i=0;i<this.templateCounts.buttons;i++)\r\n\t\t\t{\r\n\t\t\t\tlet buttonTemplate=template.buttons[i]={};\r\n\t\t\t\tbuttonTemplate.domElement=document.createElement(\"DIV\");\r\n\t\t\t\tbuttonTemplate.domElement.dataset.type=\"button\";\r\n\t\t\t\tbuttonTemplate.domElement.dataset.index=i;\r\n\t\t\t\ttemplate.buttons.domElement.append(buttonTemplate.domElement);\r\n\r\n\t\t\t\tbuttonTemplate.input=document.createElement(\"INPUT\");\r\n\t\t\t\tbuttonTemplate.domElement.appendChild(buttonTemplate.input);\r\n\r\n\t\t\t\tbuttonTemplate.description=document.createElement(\"SPAN\");\r\n\t\t\t\tbuttonTemplate.description.textContent=i;\r\n\t\t\t\tbuttonTemplate.domElement.appendChild(buttonTemplate.description);\r\n\t\t\t}\r\n\r\n\t\t\ttemplate.axes.domElement.classList.add(\"axes\");\r\n\t\t\ttemplate.domElement.appendChild(template.axes.domElement);\r\n\t\t\tlegend=document.createElement(\"LEGEND\");\r\n\t\t\tlegend.textContent=\"Axes\";\r\n\t\t\ttemplate.axes.domElement.appendChild(legend);\r\n\t\t\tif(this.templateCounts.axes==0)\r\n\t\t\t{\r\n\t\t\t\ttemplate.axes.domElement.classList.add(\"empty\");\r\n\t\t\t}\r\n\t\t\telse for(let i=0;i<this.templateCounts.axes;i++)\r\n\t\t\t{\r\n\t\t\t\tlet axisTemplate=template.axes[i]={};\r\n\t\t\t\taxisTemplate.domElement=document.createElement(\"DIV\");\r\n\t\t\t\taxisTemplate.domElement.dataset.type=\"axis\";\r\n\t\t\t\taxisTemplate.domElement.dataset.index=i;\r\n\t\t\t\ttemplate.axes.domElement.append(axisTemplate.domElement);\r\n\r\n\t\t\t\taxisTemplate.input=document.createElement(\"INPUT\");\r\n\t\t\t\taxisTemplate.domElement.appendChild(axisTemplate.input);\r\n\r\n\t\t\t\taxisTemplate.description=document.createElement(\"SPAN\");\r\n\t\t\t\taxisTemplate.description.textContent=i;\r\n\t\t\t\taxisTemplate.domElement.appendChild(axisTemplate.description);\r\n\t\t\t}\r\n\r\n\t\t\ttemplate.sticks.domElement.classList.add(\"sticks\");\r\n\t\t\ttemplate.domElement.appendChild(template.sticks.domElement);\r\n\t\t\tlegend=document.createElement(\"LEGEND\");\r\n\t\t\tlegend.textContent=\"Sticks\";\r\n\t\t\ttemplate.sticks.domElement.appendChild(legend);\r\n\t\t\tif(this.templateCounts.sticks==0)\r\n\t\t\t{\r\n\t\t\t\ttemplate.sticks.domElement.classList.add(\"empty\");\r\n\t\t\t}\r\n\t\t\telse for(let i=0;i<this.templateCounts.sticks;i++)\r\n\t\t\t{\r\n\t\t\t\tlet stickTemplate=template.buttons[i]={};\r\n\t\t\t\tstickTemplate.domElement=document.createElement(\"DIV\");\r\n\t\t\t\tstickTemplate.domElement.dataset.type=\"stick\";\r\n\t\t\t\tstickTemplate.domElement.dataset.index=i;\r\n\t\t\t\ttemplate.sticks.domElement.append(stickTemplate.domElement);\r\n\r\n\t\t\t\tlet axesWrapper=document.createElement(\"DIV\");\r\n\t\t\t\tstickTemplate.domElement.append(axesWrapper);\r\n\r\n\t\t\t\tlet descX=document.createElement(\"SPAN\");\r\n\t\t\t\tdescX.textContent=\"X:\";\r\n\t\t\t\taxesWrapper.appendChild(descX);\r\n\t\t\t\tstickTemplate.inputX=document.createElement(\"INPUT\");\r\n\t\t\t\tstickTemplate.inputX.dataset.axis=\"x\";\r\n\t\t\t\taxesWrapper.appendChild(stickTemplate.inputX);\r\n\r\n\t\t\t\tlet descY=document.createElement(\"SPAN\");\r\n\t\t\t\tdescY.textContent=\"Y:\";\r\n\t\t\t\taxesWrapper.appendChild(descY);\r\n\t\t\t\tstickTemplate.inputY=document.createElement(\"INPUT\");\r\n\t\t\t\tstickTemplate.inputY.dataset.axis=\"y\";\r\n\t\t\t\taxesWrapper.appendChild(stickTemplate.inputY);\r\n\r\n\t\t\t\tstickTemplate.description=document.createElement(\"SPAN\");\r\n\t\t\t\tstickTemplate.description.textContent=i;\r\n\t\t\t\tstickTemplate.domElement.appendChild(stickTemplate.description);\r\n\t\t\t}\r\n\r\n    \t\ttemplate.okBtn=document.createElement(\"BUTTON\");\r\n    \t\ttemplate.okBtn.classList.add(\"okButton\");\r\n    \t\ttemplate.okBtn.textContent=\"OK\";\r\n    \t\ttemplate.domElement.appendChild(template.okBtn);\r\n\r\n\t\t\treturn template;\r\n\t\t},\r\n\t\tmapKeyboard(controller)\r\n\t\t{\r\n\t\t\tlet template=this.getMappingTemplate();\r\n\t\t\tthis.domElement.removeChild(this.main);\r\n\t\t\tthis.domElement.appendChild(template.domElement);\r\n\r\n\t\t\ttemplate.domElement.addEventListener(\"keydown\",function(event)\r\n\t\t\t{\r\n\t\t\t\t//TODO ignore tab,meta and F1-N keys\r\n\t\t\t\tconsole.log(event.code);\r\n\t\t\t\tlet target=template.domElement.querySelector(\":focus\");\r\n\t\t\t\tif(target&&target.tagName===\"INPUT\")\r\n\t\t\t\t{\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\tlet item=this.getItem(target);\r\n\t\t\t\t\tif(item)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tswitch(item.dataset.type)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcase \"button\":\r\n\t\t\t\t\t\t\t\t\ttarget.value=event.code;\r\n\t\t\t\t\t\t\t\t\tcontroller.associateButton(event.code,item.dataset.index);\r\n\t\t\t\t\t\t\tcase \"axis\":\r\n\t\t\t\t\t\t\t\t\ttarget.value=event.code;\r\n\t\t\t\t\t\t\t\t\t//TODO negative\r\n\t\t\t\t\t\t\t\t\tcontroller.associateButton(event.code,item.dataset.index);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"stick\":\r\n\t\t\t\t\t\t\t\t\ttarget.value=event.code;\r\n\t\t\t\t\t\t\t\t\t//TODO negative\r\n\t\t\t\t\t\t\t\t\tcontroller.associateStick(event.code,item.dataset.index,target.dataset.axis);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tµ.logger.error(\"#ControllerConfig:004 unexpected item type\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tlet inspectInterval=setInterval(()=>inspectController.update(),100);\r\n\t\t\ttemplate.okBtn.addEventListener(\"click\",()=>\r\n\t\t\t{\r\n\t\t\t\tclearInterval(inspectInterval);\r\n\t\t\t\tinspectController.removeEventListener(\"controllerChange\",this);\r\n\t\t\t\tinspectController.destroy();\r\n\t\t\t\tthis.domElement.removeChild(template.domElement);\r\n\t\t\t\tthis.updateSystem();\r\n\t\t\t\tthis.domElement.appendChild(this.main);\r\n\t\t\t});\r\n\t\t},\r\n\t\tmapGamepad(controller)\r\n\t\t{\r\n\t\t\tlet inspectController=new SC.Gamepad(controller.gamepad);\r\n\t\t\tlet template=this.getMappingTemplate();\r\n\t\t\tthis.domElement.removeChild(this.main);\r\n\t\t\tthis.domElement.appendChild(template.domElement);\r\n\r\n\t\t\tinspectController.addEventListener(\"controllerChange\",this,function(event)\r\n\t\t\t{\r\n\t\t\t\tif(\r\n\t\t\t\t\t((event.type===\"button\"||event.type===\"axis\")&&Math.abs(event.value.value)<25) ||\r\n\t\t\t\t\t(event.type===\"stick\"&&(Math.abs(event.value.x)<25||Math.abs(event.value.y)<25))\r\n\t\t\t\t)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet target=template.domElement.querySelector(\":focus\");\r\n\t\t\t\tif(target&&target.tagName===\"INPUT\")\r\n\t\t\t\t{\r\n\t\t\t\t\tlet item=this.getItem(target);\r\n\t\t\t\t\tif(item)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tswitch(event.type)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcase \"button\":\r\n\t\t\t\t\t\t\t\tif(item.dataset.type==\"button\")\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttarget.value=event.index;\r\n\t\t\t\t\t\t\t\t\tcontroller.associateButton(event.index,item.dataset.index);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"axis\":\r\n\t\t\t\t\t\t\t\tif(item.dataset.type==\"axis\")\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttarget.value=event.index;\r\n\t\t\t\t\t\t\t\t\tcontroller.associateAxis(event.index,item.dataset.index);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if(item.dataset.type==\"stick\")\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttarget.value=event.index;\r\n\t\t\t\t\t\t\t\t\tcontroller.associateStick(event.index,item.dataset.index,target.dataset.axis);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tµ.logger.error(\"#ControllerConfig:003 unexpected controllerEvent type\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tlet inspectInterval=setInterval(()=>inspectController.update(),100);\r\n\t\t\ttemplate.okBtn.addEventListener(\"click\",()=>\r\n\t\t\t{\r\n\t\t\t\tclearInterval(inspectInterval);\r\n\t\t\t\tinspectController.removeEventListener(\"controllerChange\",this);\r\n\t\t\t\tinspectController.destroy();\r\n\t\t\t\tthis.domElement.removeChild(template.domElement);\r\n\t\t\t\tthis.updateSystem();\r\n\t\t\t\tthis.domElement.appendChild(this.main);\r\n\t\t\t});\r\n\t\t},\r\n\t\tgetItem(item)\r\n\t\t{\r\n\t\t\twhile(item&&!item.dataset.type) item=item.parentNode;\r\n\t\t\tif(!item)\r\n\t\t\t{\r\n\t\t\t\tµ.logger.error(\"#ControllerConfig:002 item not found\");\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\treturn item;\r\n\t\t},\r\n\t\tsetting(controller)\r\n\t\t{\r\n\t\t\t//TODO\r\n\t\t}\r\n\t});\r\n\r\n\tSMOD(\"gs.Game.ControllerConfig\",Game.ControllerConfig);\r\n\r\n})(Morgas,Morgas.setModule,Morgas.getModule,Morgas.hasModule,Morgas.shortcut);","(function(µ,SMOD,GMOD,HMOD,SC){\r\n\r\n\tlet gs=µ.gs=µ.gs||{};\r\n\r\n\tlet Event=GMOD(\"Event\");\r\n\r\n\tSC=SC({\r\n\t\tremove:\"array.remove\",\r\n\t\tremoveIf:\"array.removeIf\",\r\n\t\tReporter:\"EventReporterPatch\",\r\n\r\n\t\tButton:\"gs.Button\",\r\n\t\tAxis:\"gs.Axis\",\r\n\t\tStick:\"gs.Stick\"\r\n\t});\r\n\r\n\tlet NEXT_CONTROLLER_ID=0;\r\n\r\n\tgs.Controller=µ.Class({\r\n\t\tconstructor:function({buttons=[],axes=[],sticks=[]}={})\r\n\t\t{\r\n\t\t\tthis.ID=NEXT_CONTROLLER_ID++;\r\n\r\n\t\t\tthis.buttons=[];\r\n\t\t\tthis.axes=[];\r\n\t\t\tthis.sticks=[];\r\n\r\n\t\t\tthis.addButtons(buttons);\r\n\t\t\tthis.addAxes(axes);\r\n\t\t\tthis.addSticks(sticks);\r\n\r\n\t\t\tnew SC.Reporter(this)\r\n\t\t\t.introduce(gs.Controller.ChangeEvent);\r\n\r\n\t\t},\r\n\t\taddButtons(buttons)\r\n\t\t{\r\n\t\t\tthis.buttons.push(...buttons);\r\n\t\t},\r\n\t\tremoveButtons(buttons)\r\n\t\t{\r\n\t\t\tSC.removeIf(this.buttons,buttons.includes,true,buttons)\r\n\t\t},\r\n\t\tremoveButton(button)\r\n\t\t{\r\n\t\t\tSC.remove(this.buttons,button);\r\n\t\t},\r\n\t\taddAxes(axes)\r\n\t\t{\r\n\t\t\tthis.axes.push(...axes);\r\n\t\t},\r\n\t\tremoveAxes(axes)\r\n\t\t{\r\n\t\t\tSC.removeIf(this.axes,axes.includes,true,axes)\r\n\t\t},\r\n\t\tremoveAxe(axe)\r\n\t\t{\r\n\t\t\tSC.remove(this.axes,axe);\r\n\t\t},\r\n\t\taddSticks(sticks)\r\n\t\t{\r\n\t\t\tthis.sticks.push(...sticks);\r\n\t\t},\r\n\t\tremoveSticks(sticks)\r\n\t\t{\r\n\t\t\tSC.removeIf(this.sticks,sticks.includes,true,sticks)\r\n\t\t},\r\n\t\tremoveStick(stick)\r\n\t\t{\r\n\t\t\tSC.remove(this.sticks,stick);\r\n\t\t},\r\n\t\tgetState()\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tbuttons:this.buttons.map(b=>b.getState()),\r\n\t\t\t\taxes:this.axes.map(a=>a.getState()),\r\n\t\t\t\tsticks:this.sticks.map(s=>s.getState()),\r\n\t\t\t};\r\n\t\t},\r\n\t\tsetButton:function(index,value)\r\n\t\t{\r\n\t\t\tif(index<0||index>=this.buttons.length)\r\n\t\t\t{\r\n\t\t\t\tµ.logger.error(`#gs.Controller:001 index out of bounds (Button ${index})`);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet button=this.buttons[index];\r\n\t\t\tif(button.setValue(value))\r\n\t\t\t{\r\n\t\t\t\tthis.reportEvent(new gs.Controller.ChangeEvent(this,\"button\",index,button.getState()));\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetAxis:function(index,value)\r\n\t\t{\r\n\t\t\tif(index<0||index>=this.axes.length)\r\n\t\t\t{\r\n\t\t\t\tµ.logger.error(`#gs.Controller:002 index out of bounds (Axis ${index})`);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet axis=this.axes[index];\r\n\t\t\tif(axis.setValue(value))\r\n\t\t\t{\r\n\t\t\t\tthis.reportEvent(new gs.Controller.ChangeEvent(this,\"axis\",index,axis.getState()));\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetStick:function(index,valueX,valueY)\r\n\t\t{\r\n\t\t\tif(index<0||index>=this.sticks.length)\r\n\t\t\t{\r\n\t\t\t\tµ.logger.error(`#gs.Controller:003 index out of bounds (stick ${index})`);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet stick=this.sticks[index];\r\n\t\t\tif(stick.setValue(valueX,valueY))\r\n\t\t\t{\r\n\t\t\t\tthis.reportEvent(new gs.Controller.ChangeEvent(this,\"stick\",index,stick.getState()));\r\n\t\t\t}\r\n\t\t},\r\n\t\ttoJSON()\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tbuttons:this.buttons,\r\n\t\t\t\taxes:this.axes,\r\n\t\t\t\tsticks:this.sticks\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n\tgs.Controller.fromJSON=function(json)\r\n\t{\r\n\t\tif(json.buttons) json.buttons=buttons.map(SC.Button.fromJSON);\r\n\t\tif(json.axes) json.axes=json.axes.map(SC.Axis.fromJSON);\r\n\t\tif(json.sticks) json.sticks=json.sticks.map(SC.Sticks.fromJSON);\r\n\r\n\t\treturn new gs.Controller(buttons,axes,sticks);\r\n\t};\r\n\r\n\tSMOD(\"gs.Controller\",gs.Controller);\r\n\r\n\tgs.Controller.ChangeEvent=µ.Class(Event,\r\n\t{\r\n\t\tname:\"controllerChange\",\r\n\t\tconstructor:function(controller,type,index,value)\r\n\t\t{\r\n\t\t\t/** @type {gs.Controller} */\r\n\t\t\tthis.controllerID=controller.ID\r\n\t\t\t/** @type {String} \"button\", \"axis\" or \"stick\" */\r\n\t\t\tthis.type=type;\r\n\t\t\t/** @type {Number} */\r\n\t\t\tthis.index=index;\r\n\t\t\t/** @type {gs.Button|gs.Axes|gs.Stick} */\r\n\t\t\tthis.value=value;\r\n\t\t}\r\n\t});\r\n\r\n})(Morgas,Morgas.setModule,Morgas.getModule,Morgas.hasModule,Morgas.shortcut);","(function(µ,SMOD,GMOD,HMOD,SC){\r\n\r\n\tlet Controller=GMOD(\"gs.Controller\");\r\n\r\n\tSC=SC({\r\n\t\tButton:\"gs.Button\",\r\n\t\tAxis:\"gs.Axis\",\r\n\t\tStick:\"gs.Stick\"\r\n\t});\r\n\r\n\tController.Keyboard=µ.Class(Controller,{\r\n\t\t/**\r\n\t\t * @typedef {Object} Controller.Keyboard~mappings\r\n\t\t * @param {Object.<String,Number>} (param.buttons)\r\n\t\t * @param {Object.<String,{index:Number,negative:Boolean}}>} (param.axes)\r\n\t\t * @param {Object.<String,{index:Number,axis:String,negative:Boolean}>} (param.sticks)\r\n\t\t */\r\n\t\t /**\r\n\t\t  * @param {Object} param\r\n\t\t  * @param {Controller.Keyboard~mappings} param.mappings\r\n\t\t  * @param {Boolean} (generateButtons) defaults to true if no Button is defined\r\n\t\t  * @param {Boolean} (generateAxes) defaults to true if no Axis is defined\r\n\t\t  * @param {Boolean} (generateSticks) defaults to true if no Stick is defined\r\n\t\t  */\r\n\t\tconstructor:function(param={})\r\n\t\t{\r\n\t\t\tthis.mega(param);\r\n\r\n\t\t\tthis.mapping=new Map();\r\n\r\n\r\n\t\t\tif(param.mappings) this.associate(param.mappings);\r\n\r\n\t\t\tlet {\r\n\t\t\t\tgenerateButtons=this.buttons.length==0,\r\n\t\t\t\tgenerateAxes=this.axes.length==0,\r\n\t\t\t\tgenerateSticks=this.sticks.length==0\r\n\t\t\t}=param;\r\n\r\n\t\t\tif(generateButtons) this.generateButtons();\r\n\t\t\tif(generateAxes) this.generateAxes();\r\n\t\t\tif(generateSticks) this.generateSticks();\r\n\r\n\t\t},\r\n\t\tassociate({buttons={},axes={},sticks={}})\r\n\t\t{\r\n\t\t\tfor(let key in buttons)\r\n\t\t\t{\r\n\t\t\t\tthis.associateButton(key,buttons[key]);\r\n\t\t\t}\r\n\r\n\t\t\tfor(let key in axes)\r\n\t\t\t{\r\n\t\t\t\tlet settings=axes[key];\r\n\t\t\t\tthis.associateAxis(key,settings.index,settings.negative);\r\n\t\t\t}\r\n\r\n\t\t\tfor(let key in sticks)\r\n\t\t\t{\r\n\t\t\t\tlet settings=sticks[key];\r\n\t\t\t\tthis.associateStick(key,settings.index,settings.axis,settings.negative);\r\n\t\t\t}\r\n\t\t},\r\n\t\tassociateButton(key,index)\r\n\t\t{\r\n\t\t\tif(!(index in this.buttons))\r\n\t\t\t{\r\n\t\t\t\tthis.buttons[index]=new SC.Button();\r\n\t\t\t}\r\n\t\t\tthis.mapping.set(key,{\r\n\t\t\t\ttype:\"button\",\r\n\t\t\t\tindex:index\r\n\t\t\t});\r\n\t\t},\r\n\t\tassociateAxis(key,index,negative)\r\n\t\t{\r\n\t\t\tif(!(index in this.axes))\r\n\t\t\t{\r\n\t\t\t\tthis.axes[index]=new SC.Axis();\r\n\t\t\t}\r\n\t\t\tthis.mapping.set(key,{\r\n\t\t\t\ttype:\"axis\",\r\n\t\t\t\tindex:index,\r\n\t\t\t\tnegative:negative\r\n\t\t\t});\r\n\t\t},\r\n\t\t/**\r\n\t\t * @param {String} key\r\n\t\t * @param {Number} index\r\n\t\t * @param {String} axis - \"x\" or \"y\"\r\n\t\t * @param {boolean} (negative)\r\n\t\t */\r\n\t\tassociateStick(key,index,axis,negative)\r\n\t\t{\r\n\t\t\tif(!(index in this.sticks))\r\n\t\t\t{\r\n\t\t\t\tthis.sticks[index]=new SC.Stick();\r\n\t\t\t}\r\n\t\t\tthis.mapping.set(key,{\r\n\t\t\t\ttype:\"stick\",\r\n\t\t\t\taxis:axis,\r\n\t\t\t\tindex:index,\r\n\t\t\t\tnegative:negative\r\n\t\t\t});\r\n\t\t},\r\n\t\tgenerateButtons()\r\n\t\t{\r\n\t\t\tfor(let value of this.mapping.values())\r\n\t\t\t{\r\n\t\t\t\tif(value.type==\"button\"&&this.buttons[value.index]==null)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.buttons[value.index]=new SC.Button();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n        generateAxes()\r\n        {\r\n        \tfor(let value of this.mapping.values())\r\n        \t{\r\n        \t\tif(value.type==\"axis\"&&this.axes[value.index]==null)\r\n        \t\t{\r\n        \t\t\tthis.axes[value.index]=new SC.Axis();\r\n        \t\t}\r\n        \t}\r\n        },\r\n        generateSticks()\r\n        {\r\n        \tfor(let value of this.mapping.values())\r\n        \t{\r\n        \t\tif(value.type==\"stick\"&&this.sticks[value.index]==null)\r\n        \t\t{\r\n        \t\t\tthis.sticks[value.index]=new SC.Stick();\r\n        \t\t}\r\n        \t}\r\n        },\r\n        /**\r\n         * @param {Event} event\r\n         * @returns {Boolean} event consumed\r\n         */\r\n\t\tparseEvent:function(event)\r\n\t\t{\r\n\t\t\tlet mapping=this.mapping.get(event.code);\r\n\t\t\tif(mapping)\r\n\t\t\t{\r\n\t\t\t\tlet value=(event.type==\"keydown\"?100:0);\r\n\t\t\t\tswitch (mapping.type)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"button\":\r\n\t\t\t\t\t\treturn this.setButton(mapping.index,value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"axis\":\r\n\t\t\t\t\t\tif(mapping.negative) value=-value;\r\n\t\t\t\t\t\treturn this.setAxis(mapping.index,value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"stick\":\r\n\t\t\t\t\t\tif(mapping.negative) value=-value;\r\n\t\t\t\t\t\tlet valueX=null;\r\n\t\t\t\t\t\tlet valueY=null;\r\n\t\t\t\t\t\tif(mapping.axis===\"x\") valueX=value;\r\n\t\t\t\t\t\telse valueY=value;\r\n\t\t\t\t\t\treturn this.setStick(mapping.index,valueX,valueY);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\ttoJSON()\r\n\t\t{\r\n\t\t\tlet json=this.mega();\r\n\t\t\tjson.mappings=[...this.mappings.entries()];\r\n\t\t}\r\n\t});\r\n\r\n\tController.Keyboard.fromJSON=function(json)\r\n\t{\r\n\t\tif(json.buttons) json.buttons=buttons.map(SC.Button.fromJSON);\r\n\t\tif(json.axes) json.axes=json.axes.map(SC.Axis.fromJSON);\r\n\t\tif(json.sticks) json.sticks=json.sticks.map(SC.Sticks.fromJSON);\r\n\r\n\t\tlet rtn=new Controller.Keyboard(json);\r\n\r\n\t\treturn rtn;\r\n\t};\r\n\r\n\tSMOD(\"gs.Controller.Keyboard\",Controller.Keyboard);\r\n\r\n})(Morgas,Morgas.setModule,Morgas.getModule,Morgas.hasModule,Morgas.shortcut);","(function(µ,SMOD,GMOD,HMOD,SC){\r\n\r\n\tlet Controller=GMOD(\"gs.Controller\");\r\n\r\n\tSC=SC({\r\n\t\tButton:\"gs.Button\",\r\n\t\tAxis:\"gs.Axis\",\r\n\t\tStick:\"gs.Stick\"\r\n\t});\r\n\r\n\tController.Gamepad=µ.Class(Controller,{\r\n\t\tconstructor:function(gamepad,param={})\r\n\t\t{\r\n\t\t\tdelete param.sticks // don't adopt sticks, because they are generated from associations to axes\r\n\t\t\tthis.mega(param);\r\n\t\t\tthis.gamepad=gamepad;\r\n\t\t\tthis.timestamp=gamepad.timestamp;\r\n\r\n\t\t\tthis.mappings={\r\n\t\t\t\tbuttons:{},\r\n\t\t\t\taxes:{},\r\n\t\t\t\tsticks:{}\r\n\t\t\t};\r\n\t\t\tfor(let i=0;i<this.gamepad.buttons.length;i++)\r\n\t\t\t{\r\n\t\t\t\t// generate missing buttons\r\n\t\t\t\tif(this.buttons.length===i) this.buttons[i]=new SC.Button();;\r\n\t\t\t\tthis.mappings.buttons[i]=i;\r\n\t\t\t}\r\n\t\t\tfor(let i=0;i<this.gamepad.axes.length;i++)\r\n\t\t\t{\r\n\t\t\t\t// generate missing axes\r\n\t\t\t\tif(this.axes.length===i) this.axes[i]=new SC.Axis();\r\n\t\t\t\tthis.mappings.axes[i]=i;\r\n\t\t\t}\r\n\r\n\t\t\tif(param.mappings) this.associate(param.mappings);\r\n\r\n\t\t},\r\n\t\tassociate({buttons={},axes={},sticks={}})\r\n\t\t{\r\n\t\t\tfor(let key in buttons)\r\n\t\t\t{\r\n\t\t\t\tthis.associateButton(key,buttons[key]);\r\n\t\t\t}\r\n\r\n\t\t\tfor(let key in axes)\r\n\t\t\t{\r\n\t\t\t\tlet settings=axes[key];\r\n\t\t\t\tthis.associateAxis(key,settings.index,settings.negative);\r\n\t\t\t}\r\n\r\n\t\t\tfor(let key in sticks)\r\n\t\t\t{\r\n\t\t\t\tlet settings=sticks[key];\r\n\t\t\t\tthis.associateStick(key,settings.index,settings.axis,settings.negative);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * @param {Number} fromIndex\r\n\t\t * @param {Number} toIndex - null means ignore button\r\n\t\t */\r\n\t\tassociateButton(fromIndex,toIndex)\r\n\t\t{\r\n\t\t\tthis.mappings.buttons[fromIndex]=toIndex;\r\n\t\t},\r\n\t\t/**\r\n\t\t * @param {Number} fromIndex\r\n\t\t * @param {Number} toIndex - null means ignore axis\r\n\t\t */\r\n\t\tassociateAxis(fromIndex,toIndex)\r\n\t\t{\r\n\t\t\tthis.mappings.axes[fromIndex]=toIndex;\r\n\t\t},\r\n\t\t/**\r\n\t\t * @param {Number} axisIndex\r\n\t\t * @param {Number} stickIndex\r\n\t\t * @param {String} direction - \"x\" or \"y\"\r\n\t\t */\r\n\t\tassociateStick(axisIndex,stickIndex,direction)\r\n\t\t{\r\n\t\t\tthis.mappings.sticks[axisIndex]={\r\n\t\t\t\tindex:stickIndex,\r\n\t\t\t\tdirection:direction\r\n\t\t\t};\r\n\r\n\t\t\tif(!(stickIndex in this.sticks))\r\n\t\t\t{\r\n\t\t\t\tthis.sticks[stickIndex]=new SC.Stick();\r\n\t\t\t}\r\n\t\t\tif(direction===\"x\") this.sticks[stickIndex].setXAxis(this.axes[axisIndex]);\r\n\t\t\telse this.sticks[stickIndex].setYAxis(this.axes[axisIndex]);\r\n\r\n\t\t\t// remove axis mapping\r\n\t\t\tdelete this.mappings.axes[axisIndex];\r\n\t\t},\r\n\t\tupdate()\r\n\t\t{\r\n\t\t\t//let gamepad=navigator.getGamepads().find(g=>g&&g.id==this.gamepad.id);\r\n\t\t\tlet gamepad=navigator.getGamepads()[this.gamepad.index];\r\n\t\t\tif(gamepad&&this.timestamp!=gamepad.timestamp)\r\n\t\t\t{\r\n\t\t\t\tthis.gamepad=gamepad;\r\n\t\t\t\tthis.timestamp=gamepad.timestamp;\r\n\r\n\t\t\t\tfor(let i=0;i<=gamepad.buttons.length;i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tlet buttonIndex=this.mappings.buttons[i];\r\n\t\t\t\t\tif(buttonIndex!=null) this.setButton(buttonIndex,gamepad.buttons[i].value*100);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor(let i=0;i<=gamepad.axes.length;i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tlet stickMapping=this.mappings.sticks[i];\r\n\t\t\t\t\tif(stickMapping)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet valueX=null;\r\n\t\t\t\t\t\tlet valueY=null;\r\n\t\t\t\t\t\tif(stickMapping.direction===\"x\") valueX=gamepad.axes[i]*100;\r\n\t\t\t\t\t\telse valueY=gamepad.axes[i]*100;\r\n\t\t\t\t\t\treturn this.setStick(stickMapping.index,valueX,valueY);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet axisIndex=this.mappings.axes[i];\r\n\t\t\t\t\t\tif(axisIndex!=null) this.setAxis(axisIndex,gamepad.axes[i]*100);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\ttoJSON()\r\n\t\t{\r\n\t\t\tlet json=this.mega();\r\n\t\t\tjson.mappings=this.mappings;\r\n\t\t}\r\n\t});\r\n\r\n\tSMOD(\"gs.Controller.Gamepad\",Controller.Gamepad);\r\n\r\n})(Morgas,Morgas.setModule,Morgas.getModule,Morgas.hasModule,Morgas.shortcut);","(function(µ,SMOD,GMOD,HMOD,SC){\r\n\r\n\tlet gs=µ.gs=µ.gs||{};\r\n\r\n\t//SC=SC({});\r\n\r\n\t/** @typedef {Object} controllerMapping\r\n\t * @property {Object.<Number,String>} (button)\r\n\t * @property {Object.<Number,String>} (axis)\r\n\t * @property {Object.<Number,String>} (stick)\r\n\t */\r\n\r\n\tgs.Component=µ.Class({\r\n\t\t[µ.Class.symbols.abstract]:true,\r\n\t\tconstructor:function(controllerMapping=new Map())\r\n\t\t{\r\n\t\t\t/** @type {Map.<Number,controllerMapping>} */\r\n\t\t\tthis.controllerMapping=controllerMapping;\r\n\t\t\t/** @type {WeakMap.<Number,Set<Number>>} */\r\n\t\t\tthis.pressedButtons=new WeakMap();\r\n\t\t},\r\n\t\taddControllerMapping(controllerID,type,index,action)\r\n\t\t{\r\n\t\t\tif(!this.controllerMapping.has(controllerID))\r\n\t\t\t{\r\n\t\t\t\tthis.controllerMapping.set(controllerID,{});\r\n\t\t\t}\r\n\t\t\tlet mapping=this.controllerMapping.get(controllerID);\r\n\t\t\tif(!mapping[type]) mapping[type]={};\r\n\t\t\tmapping[type][index]=action;\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t/** @type {Object.<String,Function>} */\r\n\t\tactions:{},\r\n\t\t/**\r\n\t\t * @param {gs.Controller.ChangeEvent} event\r\n\t\t * @returns {boolean} consumed\r\n\t\t */\r\n\t\tconsumeControllerChange(event)\r\n\t\t{\r\n\t\t\tlet mapping=this.controllerMapping.get(event.controllerID);\r\n\t\t\tif(!mapping)\r\n\t\t\t{\r\n\t\t\t\tmapping=this.controllerMapping.get(null);\r\n\t\t\t}\r\n\t\t\tif(mapping&&mapping[event.type])\r\n\t\t\t{\r\n\t\t\t\tlet typeMapping=mapping[event.type];\r\n\t\t\t\tlet indexMapping=typeMapping[event.index]||typeMapping[null];\r\n\t\t\t\tif(indexMapping&&indexMapping in this.actions)\r\n\t\t\t\t{\r\n\t\t\t\t\tlet action=this.actions[indexMapping];\r\n\t\t\t\t\taction.call(this,event.value,event);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t/**\r\n\t\t * keeps track of pressed buttons and returns true if a button was pressed now\r\n\t\t * @protected\r\n\t\t * @param {gs.Controller.ChangeEvent} event\r\n\t\t * @returns {Boolean} button pressed now\r\n\t\t */\r\n\t\t_acceptButton(event)\r\n\t\t{\r\n\t\t\tif(!button.pressed)\r\n\t\t\t{\r\n\t\t\t\tthis.pressedButtons.delete(event.index);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse if(!this.pressedButtons.has(event.index))\r\n\t\t\t{\r\n\t\t\t\tthis.pressedButtons.add(event.index);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tSMOD(\"gs.Component\",gs.Component);\r\n\r\n})(Morgas,Morgas.setModule,Morgas.getModule,Morgas.hasModule,Morgas.shortcut);","(function(µ,SMOD,GMOD,HMOD,SC){\r\n\r\n\tlet Component=GMOD(\"gs.Component\");\r\n\r\n\tSC=SC({\r\n\t\trs:\"rescope\"\r\n\t});\r\n\r\n\tComponent.List=µ.Class(Component,{\r\n\t\tconstructor:function(data=[],mapper=Component.STD_MAPPER,{columns=1,active=0,controllerMapping=Component.STD_CONTROLLER_MAPPING}={})\r\n\t\t{\r\n\t\t\tSC.rs.all(this,[\"_step\",\"moveRight\",\"moveLeft\",\"moveDown\",\"moveUp\"]);\r\n\r\n\t\t\tthis.mega(controllerMapping);\r\n\r\n\t\t\tthis.columns=1;\r\n\t\t\tthis.data=data;\r\n\t\t\tthis.mapper=mapper;\r\n\r\n\t\t\tthis.active=active;\r\n\r\n\t\t\tthis.domElement=document.createElement(\"DIV\");\r\n\t\t\tthis.domElement.classList.add(\"Component\",\"List\");\r\n\r\n\t\t\tthis.setColumns(columns);\r\n\r\n\t\t\tthis.movement={\r\n\t\t\t\tmethod:null,\r\n\t\t\t\ttimer:null,\r\n\t\t\t\tcurrentTime:Component.INITIAL_MOVEMENT_TIMEOUT\r\n\t\t\t}\r\n\r\n\t\t\tthis.update();\r\n\t\t},\r\n\t\tupdate()\r\n\t\t{\r\n\t\t\twhile(this.domElement.firstChild) this.domElement.removeChild(this.domElement.firstChild);\r\n\r\n\t\t\tthis.active=Math.min(Math.max(this.active,0),this.data.length);\r\n\r\n\t\t\tfor(let index=0;index<this.data.length;index++)\r\n\t\t\t{\r\n\t\t\t\tlet element=document.createElement(\"DIV\");\r\n\t\t\t\tthis.mapper(element,this.data[index]);\r\n\t\t\t\telement.dataset.index=index;\r\n\t\t\t\tif(this.active===index) element.classList.add(\"active\");\r\n\t\t\t\tthis.domElement.appendChild(element);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tsetData(data=[])\r\n\t\t{\r\n\t\t\tthis.data=data;\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tsetMapper(mapper=Component.STD_MAPPER)\r\n\t\t{\r\n\t\t\tthis.mapper=mapper;\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tsetColumns(columns)\r\n\t\t{\r\n\t\t\tthis.columns=Math.max(columns,1);\r\n\t\t\tthis.domElement.style.setProperty(\"--list-columns\",this.columns);\r\n\t\t},\r\n\t\tactions:{\r\n\t\t\tmove(stick)\r\n\t\t\t{\r\n\t\t\t\tlet absX=Math.abs(stick.x);\r\n\t\t\t\tlet absY=Math.abs(stick.y);\r\n\r\n\t\t\t\tlet method;\r\n\t\t\t\tif(absX<33&&absY<33)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._stopMovement();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if(absX>=absY)\r\n\t\t\t\t{\r\n\t\t\t\t\tmethod=stick.x<0?this.moveLeft:this.moveRight;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tmethod=stick.y<0?this.moveDown:this.moveUp;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(method!=this.movement.method)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._stopMovement();\r\n\t\t\t\t\tthis.movement.method=method;\r\n\t\t\t\t\tthis._step();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t_stopMovement()\r\n\t\t{\r\n\t\t\tclearTimeout(this.movement.timer);\r\n\t\t\tthis.movement.method=null;\r\n\t\t\tthis.movement.currentTime=Component.INITIAL_MOVEMENT_TIMEOUT;\r\n\t\t},\r\n\t\tmoveRight()\r\n\t\t{\r\n\t\t\tthis.domElement.children[this.active].classList.remove(\"active\");\r\n\r\n\t\t\tthis.active=(this.active+1)%this.data.length;\r\n\r\n\t\t\tthis.domElement.children[this.active].classList.add(\"active\");\r\n\t\t},\r\n\t\tmoveLeft()\r\n\t\t{\r\n\t\t\tthis.domElement.children[this.active].classList.remove(\"active\");\r\n\r\n\t\t\tif(this.active<=0)this.active=this.data.length;\r\n\t\t\tthis.active--;\r\n\r\n\t\t\tthis.domElement.children[this.active].classList.add(\"active\");\r\n\t\t},\r\n\t\tmoveDown()\r\n\t\t{\r\n\t\t\tthis.domElement.children[this.active].classList.remove(\"active\");\r\n\r\n\t\t\tif(this.active+this.columns>=this.data.length) this.active=this.active%this.columns;\r\n\t\t\telse this.active+=this.columns;\r\n\r\n\t\t\tthis.domElement.children[this.active].classList.add(\"active\");\r\n\t\t},\r\n\t\tmoveUp()\r\n\t\t{\r\n\t\t\tthis.domElement.children[this.active].classList.remove(\"active\");\r\n\r\n\t\t\tif(this.active-this.columns<0)\r\n\t\t\t{\r\n\t\t\t\tlet fullList=this.columns*Math.ceil(this.data.length/this.columns);\r\n\t\t\t\tthis.active=fullList-(this.columns-this.active);\r\n\t\t\t\tif(this.active>=this.data.length) this.active-=this.columns;\r\n\r\n\t\t\t}\r\n\t\t\telse this.active-=this.columns;\r\n\r\n\t\t\tthis.domElement.children[this.active].classList.add(\"active\");\r\n\t\t},\r\n\t\t_step()\r\n\t\t{\r\n\t\t\tthis.movement.method.call(this);\r\n\t\t\tthis.movement.timer=setTimeout(this._step,this.movement.currentTime);\r\n\t\t\tthis.movement.currentTime=Math.max(Component.MIN_MOVEMENT_TIMEOUT,this.movement.currentTime/Component.MOVEMENT_ACCELERATION);\r\n\t\t}\r\n\t});\r\n\r\n\tComponent.STD_MAPPER=(e,d)=>e.textContent=d;\r\n\tComponent.STD_CONTROLLER_MAPPING=new Map([[null,{\r\n\t\t\"stick\":{\r\n\t\t\t\"null\":\"move\"\r\n\t\t}\r\n\t}]]);\r\n\tComponent.INITIAL_MOVEMENT_TIMEOUT=800;\r\n\tComponent.MIN_MOVEMENT_TIMEOUT=125;\r\n\tComponent.MOVEMENT_ACCELERATION=1.2;\r\n\r\n\tSMOD(\"gs.Component.List\",Component.List);\r\n\r\n})(Morgas,Morgas.setModule,Morgas.getModule,Morgas.hasModule,Morgas.shortcut);","(function(µ,SMOD,GMOD,HMOD,SC){\r\n\r\n    let gs=µ.gs=µ.gs||{};\r\n\r\n\t//SC=SC({});\r\n\r\n\tgs.Button=µ.Class({\r\n\t\tconstructor:function({value=0,threshold=50}={})\r\n\t\t{\r\n\t\t\tthis.value=0;\r\n\t\t\tthis.threshold=50;\r\n\r\n\t\t\tthis.setValue(value);\r\n\t\t\tthis.setThreshold(threshold);\r\n\t\t},\r\n\t\tsetThreshold(threshold=50)\r\n\t\t{\r\n\t\t\tthis.threshold=Math.min(Math.max(threshold,0),100);\r\n\t\t},\r\n        setValue(value=0)\r\n        {\r\n        \tif(value==null) return false;\r\n        \tvalue=Math.min(Math.max(value,0),100);\r\n        \tif(this.value==value) return false;\r\n        \tthis.value=value;\r\n        \treturn true;\r\n        },\r\n\t\tisPressed()\r\n\t\t{\r\n\t\t\treturn this.value>=this.threshold;\r\n\t\t},\r\n\t\tgetState()\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tvalue:this.value,\r\n\t\t\t\tpressed:this.isPressed()\r\n\t\t\t}\r\n\t\t},\r\n\t\ttoJSON()\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tthreshold:this.threshold\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n\tgs.Button.fromJSON=function(json)\r\n\t{\r\n\t\treturn new gs.Button(json);\r\n\t};\r\n\r\n\tSMOD(\"gs.Button\",gs.Button);\r\n\r\n})(Morgas,Morgas.setModule,Morgas.getModule,Morgas.hasModule,Morgas.shortcut);","(function(µ,SMOD,GMOD,HMOD,SC){\r\n\r\n    let gs=µ.gs=µ.gs||{};\r\n\r\n\t//SC=SC({});\r\n\r\n\tgs.Axis=µ.Class({\r\n\t\tconstructor:function({value=0,correction=0,scale=1}={})\r\n\t\t{\r\n\t\t\tthis.value=0;\r\n\t\t\tthis.correction=0;\r\n\t\t\tthis.scale=1;\r\n\r\n\t\t\tthis.setValue(value);\r\n\t\t\tthis.setCorrection(correction);\r\n\t\t\tthis.setScale(scale);\r\n\t\t},\r\n\t\tsetCorrection(correction=0)\r\n\t\t{\r\n\t\t\tthis.correction=Math.min(Math.max(correction,-100),100);\r\n\t\t},\r\n\t\tsetScale(scale=1)\r\n\t\t{\r\n\t\t\tthis.scale=Math.max(scale,Number.EPSILON);\r\n\t\t},\r\n        setValue(value)\r\n        {\r\n        \tif(value==null) return false;\r\n        \tvalue=Math.min(Math.max(value*this.scale+this.correction,-100),100);\r\n        \tif(this.value==value) return false;\r\n\t\t\tthis.value=value;\r\n\t\t\treturn true;\r\n        },\r\n\t\tgetState()\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tvalue:this.value\r\n\t\t\t};\r\n\t\t},\r\n\t\ttoJSON()\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tcorrection:this.correction,\r\n\t\t\t\tscale:this.scale\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n\tgs.Axis.fromJSON=function(json)\r\n\t{\r\n\t\treturn new gs.Axis(json);\r\n\t};\r\n\r\n\tSMOD(\"gs.Axis\",gs.Axis);\r\n\r\n})(Morgas,Morgas.setModule,Morgas.getModule,Morgas.hasModule,Morgas.shortcut);"]}